<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>bpkg-cfg-create(1) bpkg 0.17.0</title>

  <style type="text/css">
/* file      : common.css
 * license   : MIT; see accompanying LICENSE file
 */

html
{
  font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif;
  font-weight: normal;
  font-size: 18px;
  line-height: 1.4em;
  letter-spacing: 0.01em;

  color: #292929;
}

body {margin: 0;} /* There is non-0 default margin for body. */

/* See notes on what's going on here. */
body {min-width: 17em;}
@media only screen and (min-width: 360px)
{
  body {min-width: 19em;}
}

/*
 * Header (optional).
 */

#header-bar
{
  width: 100%;

  background: rgba(0, 0, 0, 0.04);
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);

  padding: .4em 0 .42em 0;
  margin: 0 0 1.4em 0;
}

#header
{
  /* Same as in #content. */
  max-width: 41em;
  margin: 0 auto 0 auto;
  padding: 0 .4em 0 .4em;

  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

  width: 100%;
  display: table;
  border: none;
  border-collapse: collapse;
}

#header-logo, #header-menu
{
  display: table-cell;
  border: none;
  padding: 0;
  vertical-align: middle;
}

#header-logo {text-align: left;}
#header-menu {text-align: right;}

/* These overlap with #header's margin because of border collapsing. */
#header-logo {padding-left: .4em;}
#header-menu {padding-right: .4em;}

#header-logo a
{
  color: #000;
  text-decoration: none;
  outline: none;
}
#header-logo a:visited {color: #000;}
#header-logo a:hover, #header-logo a:active {color: #000;}

#header-menu a
{
  font-size: 0.889em;
  line-height: 1.4em;
  text-align: right;
  margin-left: 1.2em;
  white-space: nowrap;
  letter-spacing: 0;
}

#header-menu a
{
  color: #000;
  outline: none;
}
#header-menu a:visited {color: #000;}
#header-menu a:hover, #header-menu a:active
{
  color: #3870c0;
  text-decoration: none;
}

/* Flexbox-based improvements though the above works reasonably well. */
#header-menu-body
{
  width: 100%;

  display: -webkit-inline-flex;
  display: inline-flex;

  -webkit-flex-flow: row wrap;
  flex-flow: row wrap;

  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

/* Whether we want it (and at which point) depends on the size of the menu. */
/*
@media only screen and (max-width: 567px)
{
  #header-menu-body
  {
    -webkit-flex-direction: column;
    flex-direction: column;
  }
}
*/

/*
 * Content.
 */

#content
{
  max-width: 41em;
  margin: 0 auto 0 auto;
  padding: 0 .4em 0 .4em; /* Space between text and browser frame. */

  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/*
 * Footer (optional).
 */

#footer
{
  color: #767676;
  font-size: 0.7223em;
  line-height: 1.3em;
  margin: 2.2em 0 1em 0;
  text-align: center;
}

#footer a
{
  color: #767676;
  text-decoration: underline;
}
#footer a:visited {color: #767676;}
#footer a:hover, #footer a:active {color: #3870c0;}

/* Screen size indicator in the footer. The before/after content is in case
   we don't have any content in the footer. Margin is to actually see the
   border separate from the browser frame. */

/*
#footer:before {content: "\A0";}
#footer:after {content: "\A0";}

#footer
{
  border-left: 1px solid;
  border-right: 1px solid;
  margin-left: 1px;
  margin-right: 1px;
}

@media only screen and (max-width: 359px)
{
  #footer {border-color: red;}
}

@media only screen and (min-width: 360px) and (max-width: 567px)
{
  #footer {border-color: orange;}
}

@media only screen and (min-width: 568px) and (max-width: 1023px)
{
  #footer {border-color: blue;}
}

@media only screen and (min-width: 1024px)
{
  #footer {border-color: green;}
}
*/

/*
 * Common elements.
 */

p, li, dd {text-align: justify;}
.code {text-align: left;} /* Manually aligned. */
pre {text-align: left;}   /* If it is inside li/dd. */

/* Notes. */

.note
{
  color: #606060;
}

div.note
{
  margin: 2em 0 2em 0; /* The same top/bottom margings as pre box. */

  padding-left: 0.5em;
  border: 0.25em;
  border-left-style: solid;
  border-color: #808080;

  page-break-inside: avoid;
}

div.note :first-child {margin-top:    0;}
div.note :last-child  {margin-bottom: 0;}

span.note::before {content: "[Note: "}
span.note::after  {content: "]"}

/* Links. */
a
{
  color: #3870c0;
  /*color: #4078c0;*/
  text-decoration: none;
}

a:hover, a:active
{
/*color: #006fbf;*/
/*color: #0087e7;*/
  text-decoration: underline;
}

a:visited
{
/*color: #003388;*/
  color: #00409c;
}

/* Standard paragraph. */

p, pre {margin: 1em 0 1em 0;}

/* Standard lists. */
ul, ol, dl {margin: 1em 0 1em 0;}
ul li, ol li {margin: 0 0 .4em 0;}
ul li {list-style-type: circle;}
dl dt {margin: 0 0 0 0;}
dl dd {margin: 0 0 .6em 1.8em;}

code, pre
{
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 0.92em;
  letter-spacing: 0;
}

pre {white-space: pre-wrap;}
@media only screen and (max-width: 567px)
{
  pre {word-break: break-all;}
}

/* Use page rather than system font settings. */
input
{
  font-family: inherit;
  font-weight: inherit;
  font-size:   inherit;
  line-height: inherit;
}

/* file      : pre-box.css
 * license   : MIT; see accompanying LICENSE file
 */

/* Note: see also p-code-box.css. */

pre
{
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: 0.2em;
  padding: .8em .4em .8em .4em;
  margin: 2em -.4em 2em -.4em; /* Use margins of #content. */
}

/* file      : man.css
 * license   : MIT; see accompanying LICENSE file
 */

/* Bases:
 *
 * common.css
 * pre-box.css
 *
 */

#content
{
  max-width: 42.1em;
  padding-left: 1.5em; /* Reserve for the heading. */
}

h1
{
  font-weight: normal;
  font-size: 1.58em;
  line-height: 1.4em;
  margin: 1.6em 0 .6em -.88em;
}

/* Definition list for options. */
dl.options dt {margin: 1em 0 0 0;}
dl.options dd {margin: .1em 0 0 4.5em;}

/* Make lists inside option descriptions a tad smaller. */
dl.options dd ul, dl.options dd ol, dl.options dd dl
{
  font-size: 0.889em;
  line-height: 1.4em;
}

  </style>

</head>
<body>
<div id="content">

  <h1>NAME</h1>

  <p><b><code>bpkg-cfg-create</code></b> &#8211; create configuration</p>
  <h1>SYNOPSIS</h1>

  <p class="code"><code><b>bpkg cfg-create</b>|<b>create</b> [<i>options</i>]
  [<i>cfg-args</i>]
  <br/>
  <b>bpkg cfg-create</b>|<b>create</b> [<i>options</i>]
  <b>--existing|-e</b></code></p>

  <p class="code"><code><i>cfg-args</i> = (<i>module</i> |
  <i>cfg-var</i>)...</code></p>

  <h1>DESCRIPTION</h1>

  <p>The <code><b>cfg-create</b></code> command creates a new
  <code><b>bpkg</b></code> configuration with the specified
  <code><b>build2</b></code> modules and configuration variables (the first
  form) or initializes one based on an existing build system configuration
  (the second form). The <code><b>bpkg</b></code> configuration itself is a
  build system configuration; see build system driver (<a
  href="../../build2/doc/b.xhtml"><code><b>b(1)</b></code></a>)
  <code><b>create</b></code> meta-operation for details.</p>

  <p>Unless the <code><b>--existing|-e</b></code> or
  <code><b>--wipe</b></code> option is specified,
  <code><b>cfg-create</b></code> expects the configuration directory to be
  empty or to not exist (in which case it will be created).</p>

  <p>By default, the configuration created with the first form loads the
  <code><b>config</b></code>, <code><b>test</b></code>,
  <code><b>dist</b></code>, and <code><b>install</b></code> modules. However,
  additional modules and, if required, their configuration variables can be
  specified as the <code><b>cfg-create</b></code> arguments. For example:</p>

  <pre>bpkg create cxx config.cxx=clang++ config.install.root=/usr/local</pre>

  <p>By default, <code><b>bpkg</b></code> appends <code><b>.config</b></code>
  to the names of the modules that you specify so that only their
  configurations are loaded. You can override this behavior by specifying the
  period (<code><b>.</b></code>) after the module name. You can also instruct
  <code><b>bpkg</b></code> to use the optional module load by prefixing the
  module name with the question mark (<code><b>?</b></code>). For example:</p>

  <pre>bpkg create cxx. "?cli"</pre>

  <p>Configurations can be linked with each other to allow a package to be
  built in one configuration while its dependencies in one or more linked
  configurations. This can be used to create a "base" configuration with
  common dependencies that are shared between multiple configurations. This
  mechanism is also used to provide a host configuration that is used to build
  build-time dependencies.</p>

  <p>Each configuration is assigned an automatically-generated UUID unless one
  is specified with the <code><b>--uuid</b></code> option. This UUID is used
  to check the integrity of configuration links. For convenience of referring
  to linked configurations, a configuration can also be assigned a name with
  the <code><b>--name</b></code> option.</p>

  <p>A configuration also has a type specified with the
  <code><b>--type</b></code> option. Three predefined types are
  <code><b>target</b></code>, <code><b>host</b></code>, and
  <code><b>build2</b></code>. If the type is not specified explicitly, then
  <code><b>target</b></code> is assumed. When satisfying a dependency of one
  package on another, a linked configuration will only be considered if (1) it
  has the same type as the other configuration for run-time dependencies, (2)
  it has the <code><b>host</b></code> type for regular build-time
  dependencies, and (3) it has the <code><b>build2</b></code> type for build
  system module build-time dependencies. Note that a host configuration is a
  target configuration for the host machine. So to create a self-hosted
  configuration, use type <code><b>host</b></code>.</p>

  <p>To link a configuration we use the <a
  href="bpkg-cfg-link.xhtml"><code><b>bpkg-cfg-link(1)</b></code></a> command.
  As a shortcut, host and build system module configurations can also be
  linked during the configuration creation with the
  <code><b>--host-config</b></code> and <code><b>--build2-config</b></code>
  options, respectively. If a build-time dependency is encountered in a
  configuration that has no linked configuration of a suitable type
  (<code><b>host</b></code> or <code><b>build2</b></code>, nor is itself of a
  suitable type), then a private host or build system module configuration
  named <code><b>host</b></code> or <code><b>build2</b></code>, respectively,
  is created automatically inside the configuration's <code>.bpkg/</code>
  subdirectory.</p>

  <h1>CFG-CREATE OPTIONS</h1>

  <dl class="options">
    <dt><code><b>--directory</b></code>|<code><b>-d</b></code> <code><i>dir</i></code></dt>
    <dd>Create the configuration in <code><i>dir</i></code> rather than in the
    current working directory.</dd>

    <dt><code><b>--existing</b></code>|<code><b>-e</b></code></dt>
    <dd>Initialize a <code><b>bpkg</b></code> configuration based on an
    existing build system configuration.</dd>

    <dt><code><b>--wipe</b></code></dt>
    <dd>Wipe the configuration directory clean before creating the new
    configuration. For safety, this option requires that you specify the
    configuration directory explicitly with
    <code><b>--directory|-d</b></code>.</dd>

    <dt><code><b>--host-config</b></code> <code><i>dir</i></code></dt>
    <dd>Link the specified host configuration with the configuration being
    created as if by running the <a
    href="bpkg-cfg-link.xhtml"><code><b>bpkg-cfg-link(1)</b></code></a>
    command.</dd>

    <dt><code><b>--no-host-config</b></code></dt>
    <dd>Ignore any specified <code><b>--host-config</b></code> options.</dd>

    <dt><code><b>--build2-config</b></code> <code><i>dir</i></code></dt>
    <dd>Link the specified build system module configuration with the
    configuration being created as if by running the <a
    href="bpkg-cfg-link.xhtml"><code><b>bpkg-cfg-link(1)</b></code></a>
    command.</dd>

    <dt><code><b>--no-build2-config</b></code></dt>
    <dd>Ignore any specified <code><b>--build2-config</b></code> options.</dd>

    <dt><code><b>--name</b></code> <code><i>name</i></code></dt>
    <dd>The name of the configuration being created. If this configuration is
    linked with another configuration using <a
    href="bpkg-cfg-link.xhtml"><code><b>bpkg-cfg-link(1)</b></code></a>, this
    name will be used as the link name unless overridden. By default the
    configuration is created unnamed.</dd>

    <dt><code><b>--type</b></code> <code><i>type</i></code></dt>
    <dd>The type of the configuration being created. By default, configuration
    of type <code><b>target</b></code> is created.</dd>

    <dt><code><b>--uuid</b></code> <code><i>uuid</i></code></dt>
    <dd>Use the specified UUID as the configuration id instead of generating
    one automatically.</dd>
  </dl>

  <h1>COMMON OPTIONS</h1>

  <p>The common options are summarized below with a more detailed description
  available in <a
  href="bpkg-common-options.xhtml"><code><b>bpkg-common-options(1)</b></code></a>.</p>

  <dl class="options">
    <dt><code><b>-v</b></code></dt>
    <dd>Print essential underlying commands being executed.</dd>

    <dt><code><b>-V</b></code></dt>
    <dd>Print all underlying commands being executed.</dd>

    <dt><code><b>--quiet</b></code>|<code><b>-q</b></code></dt>
    <dd>Run quietly, only printing error messages.</dd>

    <dt><code><b>--verbose</b></code> <code><i>level</i></code></dt>
    <dd>Set the diagnostics verbosity to <code><i>level</i></code> between 0
    and 6.</dd>

    <dt><code><b>--stdout-format</b></code> <code><i>format</i></code></dt>
    <dd>Representation format to use for printing to
    <code><b>stdout</b></code>.</dd>

    <dt><code><b>--jobs</b></code>|<code><b>-j</b></code> <code><i>num</i></code></dt>
    <dd>Number of jobs to perform in parallel.</dd>

    <dt><code><b>--no-result</b></code></dt>
    <dd>Don't print informational messages about the outcome of performing a
    command or some of its parts.</dd>

    <dt><code><b>--structured-result</b></code> <code><i>fmt</i></code></dt>
    <dd>Write the result of performing a command in a structured form.</dd>

    <dt><code><b>--progress</b></code></dt>
    <dd>Display progress indicators for long-lasting operations, such as
    network transfers, building, etc.</dd>

    <dt><code><b>--no-progress</b></code></dt>
    <dd>Suppress progress indicators for long-lasting operations, such as
    network transfers, building, etc.</dd>

    <dt><code><b>--diag-color</b></code></dt>
    <dd>Use color in diagnostics.</dd>

    <dt><code><b>--no-diag-color</b></code></dt>
    <dd>Don't use color in diagnostics.</dd>

    <dt><code><b>--build</b></code> <code><i>path</i></code></dt>
    <dd>The build program to be used to build packages.</dd>

    <dt><code><b>--build-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the build program.</dd>

    <dt><code><b>--fetch</b></code> <code><i>path</i></code></dt>
    <dd>The fetch program to be used to download resources.</dd>

    <dt><code><b>--fetch-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the fetch program.</dd>

    <dt><code><b>--fetch-timeout</b></code> <code><i>sec</i></code></dt>
    <dd>The fetch and fetch-like (for example, <code><b>git</b></code>)
    program timeout.</dd>

    <dt><code><b>--pkg-proxy</b></code> <code><i>url</i></code></dt>
    <dd>HTTP proxy server to use when fetching package manifests and archives
    from remote <code><b>pkg</b></code> repositories.</dd>

    <dt><code><b>--git</b></code> <code><i>path</i></code></dt>
    <dd>The git program to be used to fetch git repositories.</dd>

    <dt><code><b>--git-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional common option to be passed to the git program.</dd>

    <dt><code><b>--sha256</b></code> <code><i>path</i></code></dt>
    <dd>The sha256 program to be used to calculate SHA256 sums.</dd>

    <dt><code><b>--sha256-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the sha256 program.</dd>

    <dt><code><b>--tar</b></code> <code><i>path</i></code></dt>
    <dd>The tar program to be used to extract package archives.</dd>

    <dt><code><b>--tar-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the tar program.</dd>

    <dt><code><b>--openssl</b></code> <code><i>path</i></code></dt>
    <dd>The openssl program to be used for crypto operations.</dd>

    <dt><code><b>--openssl-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the openssl program.</dd>

    <dt><code><b>--auth</b></code> <code><i>type</i></code></dt>
    <dd>Types of repositories to authenticate.</dd>

    <dt><code><b>--trust</b></code> <code><i>fingerprint</i></code></dt>
    <dd>Trust repository certificate with a SHA256
    <code><i>fingerprint</i></code>.</dd>

    <dt><code><b>--trust-yes</b></code></dt>
    <dd>Assume the answer to all authentication prompts is
    <code><b>yes</b></code>.</dd>

    <dt><code><b>--trust-no</b></code></dt>
    <dd>Assume the answer to all authentication prompts is
    <code><b>no</b></code>.</dd>

    <dt><code><b>--git-capabilities</b></code> <code><i>up</i></code>=<code><i>pc</i></code></dt>
    <dd>Protocol capabilities (<code><i>pc</i></code>) for a
    <code><b>git</b></code> repository URL prefix
    (<code><i>up</i></code>).</dd>

    <dt><code><b>--pager</b></code> <code><i>path</i></code></dt>
    <dd>The pager program to be used to show long text.</dd>

    <dt><code><b>--pager-option</b></code> <code><i>opt</i></code></dt>
    <dd>Additional option to be passed to the pager program.</dd>

    <dt><code><b>--options-file</b></code> <code><i>file</i></code></dt>
    <dd>Read additional options from <code><i>file</i></code>.</dd>

    <dt><code><b>--default-options</b></code> <code><i>dir</i></code></dt>
    <dd>The directory to load additional default options files from.</dd>

    <dt><code><b>--no-default-options</b></code></dt>
    <dd>Don't load default options files.</dd>

    <dt><code><b>--keep-tmp</b></code></dt>
    <dd>Don't remove the <code><b>bpkg</b></code>'s temporary directory at the
    end of the command execution and print its path at the verbosity level 2
    or higher.</dd>
  </dl>

  <h1>DEFAULT OPTIONS FILES</h1>

  <p>See <a
  href="bpkg-default-options-files.xhtml"><code><b>bpkg-default-options-files(1)</b></code></a>
  for an overview of the default options files. For the
  <code><b>cfg-create</b></code> command the search start directory is the
  parent directory of the new configuration. The following options files are
  searched for in each directory and, if found, loaded in the order
  listed:</p>

  <pre>bpkg.options
bpkg-cfg-create.options</pre>

  <p>The following <code><b>cfg-create</b></code> command options cannot be
  specified in the default options files:</p>

  <pre>--directory|-d
--wipe</pre>

  <h1>BUGS</h1>

  <p>Send bug reports to the
  <a href="mailto:users@build2.org">users@build2.org</a> mailing list.</p>

</div>

<div id="footer">
Copyright &#169; 2014-2024 the build2 authors.<br/>
Permission is granted to copy, distribute and/or modify this document under
the terms of the MIT License.
</div>

</body>
</html>
